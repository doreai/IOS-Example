// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name DorePetSegmentLite
import CoreImage
import CoreML
import DoreCoreAI
@_exported import DorePetSegmentLite
import Foundation
import Swift
import UIKit
public struct Result {
}
public class segmentInput : CoreML.MLFeatureProvider {
  @objc public var featureNames: Swift.Set<Swift.String> {
    @objc get
  }
  @objc public func featureValue(for featureName: Swift.String) -> CoreML.MLFeatureValue?
  public init(image: CoreVideo.CVPixelBuffer)
  @objc deinit
}
public class segmentOut : CoreML.MLFeatureProvider {
  final public let provider: CoreML.MLFeatureProvider
  public var semanticPredictions: CoreML.MLMultiArray {
    get
    set
  }
  @objc public var featureNames: Swift.Set<Swift.String> {
    @objc get
  }
  @objc public func featureValue(for featureName: Swift.String) -> CoreML.MLFeatureValue?
  public init(semanticPredictions: CoreML.MLMultiArray)
  public init(features: CoreML.MLFeatureProvider)
  @objc deinit
}
public protocol PetSegmentLiteDelegate : AnyObject {
  func onPetSegmentLiteSuccess(_ info: Swift.String)
  func onPetSegmentLiteFailure(_ error: Swift.String)
  func onPetSegmentLiteProgressUpdate(_ progress: Swift.String)
  func onPetSegmentLiteDownloadSpeed(_ dps: Swift.String)
}
public class PetSegmentLiteManager {
  public init()
  weak open var delegate: DorePetSegmentLite.PetSegmentLiteDelegate?
  public func init_data(licKey: Swift.String)
  public func resizeBuffer(pixelBuffer: CoreVideo.CVPixelBuffer) -> CoreVideo.CVPixelBuffer?
  public func run_model(onFrame pixelBuffer: CoreVideo.CVPixelBuffer) -> DorePetSegmentLite.segmentOut?
  @objc deinit
}
